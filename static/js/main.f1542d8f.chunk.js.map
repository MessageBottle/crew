{"version":3,"sources":["UI/store/reducers/crew.js","UI/store/reducers/user.js","UI/store/reducers/index.js","UI/store/labels/crew.js","UI/store/labels/user.js","UI/store/actions/crew.js","UI/store/sagas/utils.js","UI/store/sagas/crew.js","UI/store/sagas/index.js","UI/store/store.js","firebase/initialize.js","firebase/OAuth.js","UI/components/Auth/Auth.js","UI/utils/utils.js","UI/components/Search/Search.js","UI/components/OffCanvasBody/OffCanvasBody.js","UI/Layout/Header/OffCanvas/OffCanvas.js","UI/Pages/routes/routes.js","UI/Pages/Navigation/Navigation.js","UI/Layout/Header/Header.js","UI/Layout/Layout.js","UI/Pages/Pages.js","UI/App.js","index.js"],"names":["initialState","userData","rootReducer","combineReducers","crew","state","type","payload","outputState","data","user","postCrew","postCrewSucceded","postCrewFailed","callIfPresent","callback","rest","call","unexpectedError","error","request","toast","message","postCrewWorker","postCrewAPI","axios","beforeLaunch","responseWrapper","put","actions","response","onSuccess","onFailure","afterLanding","watchCrew","rootSaga","all","takeEvery","crewSaga","spawn","sagaMiddleWare","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","firebaseApp","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GithubAuthProvider","addScope","auth","getAuth","signIn","signInWithPopup","then","success","catch","signOut","Auth","useAuthState","initialising","useEffect","displayName","console","log","Dropdown","align","src","photoURL","className","alt","Button","variant","onClick","disabled","Spinner","animation","size","Toggle","split","id","Menu","Item","URL","REACT_APP_PROJECT_REPO_URL","window","open","Header","Search","Form","FormControl","placeholder","aria-label","OffCanvasBody","OffCanvas","useState","showOffCanvas","setshowOffCanvas","Offcanvas","show","onHide","placement","closeButton","Title","Body","GUEST_ROUTES","gettingStarted","pageName","path","PageComponent","React","lazy","home","aboutUs","USER_ROUTES","myCrew","ALL_ROUTES","ALL_ROUTES_ARRAY","Object","values","Navigation","location","useLocation","Nav","justify","activeKey","pathname","map","parentRoute","key","Link","eventKey","navigate","useNavigate","Navbar","bg","fixed","onSelect","undefined","Col","xs","sm","Container","span","offset","Layout","children","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","transition","Slide","Pages","element","App","basename","fallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1542d8f.chunk.js","sourcesContent":["import * as labels from '../labels';\n\nconst initialState = {};\n\nexport default function crewReducer(state = initialState, { type, payload }) {\n    const outputState = { ...state };\n    switch (type) {\n        case labels.POST_CREW_SUCCEDED:\n            outputState.data = payload.data;\n            return outputState;\n        case labels.POST_CREW_FAILED:\n            return state;\n        default:\n            return state;\n    }\n}\n","import * as labels from '../labels';\n\nconst initialState = { userData: null };\n\nexport default function userReducer(state = initialState, { type, payload }) {\n    const outputState = { ...state };\n    switch (type) {\n        case labels.USER_SIGNED_IN:\n            outputState.userData = payload;\n            return outputState;\n        case labels.USER_SIGNED_OUT:\n            outputState.userData = null;\n            return outputState;\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport crewReducer from './crew';\nimport userReducer from './user';\n\nconst rootReducer = combineReducers({ crew: crewReducer, user: userReducer });\n\nexport default rootReducer;\n","export const GET_CREW = 'GET_CREW';\n\nexport const POST_CREW = 'POST_CREW';\n\nexport const POST_CREW_SUCCEDED = 'POST_CREW_SUCCEDED';\n\nexport const POST_CREW_FAILED = 'POST_CREW_FAILED';\n","export const USER_SIGNED_IN = 'USER_SIGNED_IN';\n\nexport const USER_SIGNED_OUT = 'USER_SIGNED_OUT';\n","import * as labels from '../labels';\n\nexport const getCrew = payload => ({\n    type: labels.GET_CREW,\n    payload,\n});\n\nexport const postCrew = payload => ({\n    type: labels.POST_CREW,\n    payload,\n});\n\nexport const postCrewSucceded = payload => ({\n    type: labels.POST_CREW_SUCCEDED,\n    payload,\n});\n\nexport const postCrewFailed = payload => ({\n    type: labels.POST_CREW_FAILED,\n    payload,\n});","import { toast } from 'react-toastify';\nimport { call } from 'redux-saga/effects';\n\nexport function callIfPresent(...args) {\n    const [callback, ...rest] = args[0];\n    if (callback) {\n        return call(callback, ...rest);\n    }\n    return undefined;\n}\n\nexport function unexpectedError(error) {\n    if (error.request) {\n        toast.error('Connection failed, please retry');\n    } else {\n        toast.error(`Request failed: ${error.message}`);\n    }\n}\n","import { call, put } from 'redux-saga/effects';\nimport * as axios from 'axios';\n\nimport * as actions from '../actions';\nimport { unexpectedError, callIfPresent } from './utils';\n\nconst SERVICE_URL = 'https://www.google.com';\n\nconst postCrewAPI = payload => axios.post(SERVICE_URL, payload);\n\nexport function* postCrewWorker({ payload }) {\n    yield callIfPresent(payload.beforeLaunch);\n\n    try {\n        const responseWrapper = yield call(postCrewAPI, payload);\n        yield put(actions.postCrewSucceded({ response: responseWrapper.data }));\n\n        yield callIfPresent(payload.onSuccess, responseWrapper.data);\n    } catch (error) {\n        if (error.response) {\n            yield put(actions.postCrewFailed());\n\n            yield callIfPresent(payload.onFailure, error.response);\n        } else {\n            yield call(unexpectedError, error);\n        }\n    }\n\n    yield callIfPresent(payload.afterLanding);\n}\n","import { all, takeEvery, spawn } from 'redux-saga/effects';\n\nimport * as actions from '../actions';\nimport * as crewSaga from './crew';\n\nfunction* watchCrew() {\n    yield all([takeEvery(actions.postCrew, crewSaga.postCrewWorker)]);\n}\n\nexport default function* rootSaga() {\n    yield spawn(watchCrew);\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from '@redux-devtools/extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(sagaMiddleWare))\n);\n\nsagaMiddleWare.run(rootSaga);\n\nexport default store;\n","import { initializeApp } from 'firebase/app';\n// import { getAnalytics } from 'firebase/analytics';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);\n\n// export const firebaseAnalytics = getAnalytics(firebaseApp);\n","import { getAuth, signInWithPopup, GithubAuthProvider } from 'firebase/auth';\nimport { toast } from 'react-toastify';\n\nimport { firebaseApp } from './initialize';\n\nconst provider = new GithubAuthProvider();\nprovider.addScope();\n\nexport const auth = getAuth(firebaseApp);\n\nexport function signIn() {\n    return signInWithPopup(auth, provider)\n        .then(response => {\n            toast.success('Signed In!');\n            return response;\n        })\n        .catch(error => {\n            toast.error(error.message);\n        });\n}\n\nexport function signOut() {\n    return auth\n        .signOut()\n        .then(response => {\n            toast.success('Signed Out!');\n            return response;\n        })\n        .catch(error => {\n            toast.error(error.message);\n        });\n}\n","import React, { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { toast } from 'react-toastify';\n\nimport { auth, signIn, signOut } from '../../../firebase/OAuth';\n// import { userSignedIn } from '../../store/actions';\n\nimport { Button, Dropdown, Spinner } from 'react-bootstrap';\nimport { openInNewTab } from '../../utils/utils';\n\nimport './Auth.css';\n\nconst Auth = () => {\n    const [user, initialising] = useAuthState(auth);\n    // const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (user) {\n            // dispatch(userSignedIn(user));\n            toast.success(`Welcome! ${user.displayName}`);\n        }\n    }, [user]);\n\n    console.log(initialising, user);\n\n    return (\n        <Dropdown align=\"end\">\n            {user ? (\n                <img src={user.photoURL} className=\"avatar\" alt=\"avatar\" />\n            ) : (\n                <Button\n                    variant=\"outline-dark\"\n                    onClick={signIn}\n                    disabled={initialising}\n                >\n                    {initialising ? (\n                        <Spinner animation=\"border\" size=\"sm\" variant=\"dark\" />\n                    ) : (\n                        'Sign In'\n                    )}\n                </Button>\n            )}\n            <Dropdown.Toggle\n                split\n                variant=\"outline-dark\"\n                id=\"profile-dropdown-toggle\"\n            />\n\n            <Dropdown.Menu variant=\"light\">\n                <Dropdown.Item\n                    onClick={() => {\n                        openInNewTab(process.env.REACT_APP_PROJECT_REPO_URL);\n                    }}\n                >\n                    Report a bug! (on GitHub)\n                </Dropdown.Item>\n                {user ? (\n                    <>\n                        <Dropdown.Header>{user.displayName}</Dropdown.Header>\n                        <Dropdown.Item onClick={signOut}>\n                            Sign out\n                        </Dropdown.Item>\n                    </>\n                ) : null}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default Auth;\n","export function openInNewTab(URL) {\n    window.open(URL, '_blank', 'noopener, noreferrer');\n}\n","import React from 'react';\nimport { Button, Form, FormControl } from 'react-bootstrap';\n\nconst Search = () => (\n    <Form className=\"d-flex\">\n        <FormControl\n            type=\"search\"\n            placeholder=\"Search\"\n            className=\"me-2\"\n            aria-label=\"Search\"\n        />\n        <Button variant=\"outline-dark\">Search</Button>\n    </Form>\n);\n\nexport default Search;\n","import React from 'react';\n\nconst OffCanvasBody = () => <div></div>;\n\nexport default OffCanvasBody;\n","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\nimport OffCanvasBody from '../../../components/OffCanvasBody/OffCanvasBody';\n\nconst OffCanvas = () => {\n    const [showOffCanvas, setshowOffCanvas] = useState(false);\n\n    return (\n        <>\n            <Button\n                variant=\"outline-dark\"\n                onClick={() => {\n                    setshowOffCanvas(true);\n                }}\n            >\n                Menu\n            </Button>\n            <Offcanvas\n                show={showOffCanvas}\n                onHide={() => {\n                    setshowOffCanvas(false);\n                }}\n                placement=\"start\"\n            >\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Crew</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <OffCanvasBody />\n                </Offcanvas.Body>\n            </Offcanvas>\n        </>\n    );\n};\n\nexport default OffCanvas;\n","import React from 'react';\n\nexport const GUEST_ROUTES = {\n    gettingStarted: {\n        pageName: 'Getting Started',\n        path: '/getting-started',\n        PageComponent: React.lazy(() => import('../Home/Home')),\n    },\n    home: {\n        pageName: 'Home',\n        path: '/',\n        PageComponent: React.lazy(() => import('../Home/Home')),\n    },\n    aboutUs: {\n        pageName: 'About Us',\n        path: '/about-us',\n        PageComponent: React.lazy(() => import('../Home/Home')),\n    },\n};\n\nexport const USER_ROUTES = {\n    myCrew: {\n        pageName: 'My Crew',\n        path: '/my-crew',\n        PageComponent: React.lazy(() => import('../Home/Home')),\n    },\n};\n\nexport const ALL_ROUTES = { ...GUEST_ROUTES, ...USER_ROUTES };\nexport const ALL_ROUTES_ARRAY = Object.values(ALL_ROUTES);\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Nav } from 'react-bootstrap';\n\nimport { ALL_ROUTES_ARRAY } from '../routes/routes';\n\nconst Navigation = () => {\n    const location = useLocation();\n\n    return (\n        <Nav variant=\"pills\" justify activeKey={location.pathname}>\n            {ALL_ROUTES_ARRAY.map(parentRoute => (\n                <Nav.Item key={parentRoute.path}>\n                    <Nav.Link eventKey={parentRoute.path}>\n                        {parentRoute.pageName}\n                    </Nav.Link>\n                </Nav.Item>\n            ))}\n        </Nav>\n    );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Col, Container, Navbar } from 'react-bootstrap';\n\nimport Auth from '../../components/Auth/Auth';\nimport Search from '../../components/Search/Search';\nimport OffCanvas from './OffCanvas/OffCanvas';\nimport Navigation from '../../Pages/Navigation/Navigation';\n\nconst Header = () => {\n    const navigate = useNavigate();\n\n    function navigateTo(path) {\n        if (path !== null && path !== undefined) {\n            navigate(path);\n        }\n    }\n\n    return (\n        <Navbar\n            bg=\"light\"\n            variant=\"light\"\n            fixed=\"top\"\n            onSelect={eventKey => navigateTo(eventKey)}\n        >\n            <Col xs=\"auto\" sm=\"auto\">\n                <Container>\n                    <OffCanvas />\n                </Container>\n            </Col>\n            <Col xs=\"auto\" sm=\"auto\">\n                <Container>\n                    <Search />\n                </Container>\n            </Col>\n            <Col xs={{ span: true, offset: 1 }} sm={{ span: true, offset: 1 }}>\n                <Container>\n                    <Navigation />\n                </Container>\n            </Col>\n            <Col\n                xs={{ span: 'auto', offset: 1 }}\n                sm={{ span: 'auto', offset: 1 }}\n            >\n                <Container>\n                    <Auth />\n                </Container>\n            </Col>\n        </Navbar>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport { ToastContainer, Slide } from 'react-toastify';\n\nimport Header from './Header/Header';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Layout = ({ children }) => {\n    return (\n        <div className=\"Layout\">\n            <ToastContainer\n                position=\"bottom-right\"\n                autoClose={5000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n                transition={Slide}\n            />\n            <Header />\n            {children}\n        </div>\n    );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { ALL_ROUTES_ARRAY } from './routes/routes';\n\nconst Pages = () => (\n    <Routes>\n        {ALL_ROUTES_ARRAY.map(parentRoute => (\n            <Route\n                key={parentRoute.path}\n                path={parentRoute.path}\n                element={<parentRoute.PageComponent />}\n            />\n        ))}\n    </Routes>\n);\n\nexport default Pages;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Spinner } from 'react-bootstrap';\n\nimport store from './store/store';\nimport Layout from './Layout/Layout';\nimport Pages from './Pages/Pages';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <BrowserRouter basename={process.env.REACT_APP_CREW_BASE_URL}>\n                <Layout>\n                    <Suspense\n                        fallback={<Spinner animation=\"border\" variant=\"dark\" />}\n                    >\n                        <Pages />\n                    </Suspense>\n                </Layout>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './UI/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}